name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker images
      run: docker-compose build --push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Kubernetes Tools
      uses: azure/setup-kubectl@v3
    - name: Set Kubernetes Context
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    - name: Create namespace
      run: kubectl apply -f k8s/namespace.yaml
    - name: Deploy Chat Service
      run: kubectl apply -f k8s/chat-service-deployment.yaml && kubectl apply -f k8s/chat-service-service.yaml
    - name: Deploy SEO Service
      run: kubectl apply -f k8s/seo-service-deployment.yaml && kubectl apply -f k8s/seo-service-service.yaml
    - name: Deploy Knowledge Service
      run: kubectl apply -f k8s/knowledge-service-deployment.yaml && kubectl apply -f k8s/knowledge-service-service.yaml
    - name: Deploy Video Service
      run: kubectl apply -f k8s/video-service-deployment.yaml && kubectl apply -f k8s/video-service-service.yaml
    - name: Deploy API Gateway
      run: kubectl apply -f k8s/api-gateway-deployment.yaml && kubectl apply -f k8s/api-gateway-service.yaml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Chat Service
      uses: docker/build-push-action@v4
      with:
        context: ./chat-service
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/chat-service:latest
    - name: Build and push SEO Service
      uses: docker/build-push-action@v4
      with:
        context: ./seo-service
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/seo-service:latest
    - name: Build and push API Gateway
      uses: docker/build-push-action@v4
      with:
        context: ./api-gateway
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/api-gateway:latest
    - name: Build and push Knowledge Service
      uses: docker/build-push-action@v4
      with:
        context: ./knowledge-service
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/knowledge-service:latest
    - name: Build and push Video Service
      uses: docker/build-push-action@v4
      with:
        context: ./video-service
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/video-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Kubernetes Tools
      uses: azure/setup-kubectl@v3
    - name: Set Kubernetes Context
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/
